{"version":3,"sources":["modules/user/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uEAgCA;AAAA;;AAAA,qBAGM,WAHN,EAIM,aAJN,EAKM,YALN,EAMM,YANN,EAOM,iBAPN,EAQM,cARN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBASe,kBAAQ,GAAR,CAAY,CACrB,KAAK,QAAQ,GAAb,EAAkB,OAAlB,GAA4B,WAA5B,EADqB,EAErB,KAAK,QAAQ,GAAb,EAAkB,SAAlB,GAA8B,iBAA9B,EAFqB,EAGrB,4BAAgB;AAAA,qBACd,MAAK,QAAQ,GAAb,EAAkB,OAAlB,GAA4B,gBAA5B,CAA6C,OAA7C,CADc;AAAA,aAAhB,CAHqB,EAMrB,4BAAgB;AAAA,qBACd,MAAK,QAAQ,GAAb,EAAkB,SAAlB,GAA8B,yBAA9B,CAAwD,OAAxD,CADc;AAAA,aAAhB,CANqB,EASrB,4BAAgB;AAAA,qBACd,MAAK,QAAQ,GAAb,EAAkB,iBAAlB,GAAsC,8BAAtC,CAAqE,OAArE,CADc;AAAA,aAAhB,CATqB,EAYrB,4BAAgB;AAAA,qBACd,MAAK,QAAQ,GAAb,EAAkB,cAAlB,GAAmC,kBAAnC,CAAsD,OAAtD,CADc;AAAA,aAAhB,CAZqB,CAAZ,CATf;;AAAA;AAAA,0BAwBY;AAAA,qBAAQ,wBAAY,IAAZ,CAAR;AAAA,aAxBZ;;AAAA,iCAwBQ,GAxBR;AAAA;AAGM,uBAHN;AAIM,yBAJN;AAKM,wBALN;AAMM,wBANN;AAOM,6BAPN;AAQM,0BARN;;;AA0BI,iBAAK,KAAL,CAAW,QAAX,CAAoB;AAClB,oBAAM,KAAK,OAAL,CAAa,YADD;AAElB,uBAAS;AACP,wCADO;AAEP,4CAFO;AAGP,0CAHO;AAIP,0CAJO;AAKP,oDALO;AAMP;AANO;AAFS,aAApB;AAWA,iBAAK,QAAQ,OAAb,EAAsB,IAAtB,CAA2B,qBAAW,cAAtC;AArCJ;AAAA;;AAAA;AAAA;AAAA;;;AAwCI,oBAAQ,GAAR;AACA,iBAAK,QAAQ,IAAb,EAAmB,MAAnB;;AAzCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;kBAAe,Q;;;;;AAhCf;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAM,UAAU,wBAAc,CAC5B,KAD4B,EAE5B,MAF4B,EAG5B,UAH4B,EAI5B,SAJ4B,EAK5B,UAL4B,CAAd,CAAhB;;AAQA,IAAM,eAAe;AACnB,QAAM;AADa,CAArB;;AAIA,SAAS,sBAAT,CAAgC,MAAhC,EAAwC;AACtC,SAAO,UAAC,KAAD,EAAQ,MAAR,EAAmB;AACxB,QAAI,OAAO,KAAP,KAAiB,WAArB,EAAkC,OAAO,sBAAc,EAAd,EAAkB,YAAlB,CAAP;AAClC,QAAI,CAAC,MAAL,EAAa,OAAO,KAAP;AACb,YAAQ,OAAO,IAAf;AACE;AACE,eAAO,KAAP;AAFJ;AAID,GAPD;AAQD;;IA+CoB,I;;;AACnB,gBAAY,OAAZ,EAAqB;AAAA;;AAAA;;AAAA,0IAEd,OAFc;AAGjB;AAHiB;;AAAA,QAMjB,GANiB,GAUf,OAVe,CAMjB,GANiB;AAAA,QAOjB,IAPiB,GAUf,OAVe,CAOjB,IAPiB;AAAA,QAQjB,QARiB,GAUf,OAVe,CAQjB,QARiB;AAAA,QASjB,QATiB,GAUf,OAVe,CASjB,QATiB;;AAWnB,WAAK,QAAQ,GAAb,IAAoB,GAApB;AACA,WAAK,QAAQ,IAAb,IAAqB,IAArB;AACA,WAAK,QAAQ,QAAb,IAAyB,QAAzB;AACA,WAAK,QAAQ,OAAb,IAAwB,gCAAxB;AACA,WAAK,QAAQ,QAAb,IAAyB,QAAzB;;AAEA,aAAS,eAAT,CAAyB,MAAzB,EAAiC,wBAAjC;;;AAGA,aAAS,EAAT,CAAY,SAAS,MAAT,CAAgB,YAA5B,EAA0C,YAAM;AACxC,cAAN;AACD,KAFD;;AAIA,aAAS,EAAT,CAAY,SAAS,MAAT,CAAgB,aAA5B,EAA2C,YAAM;AAC/C,aAAK,KAAL,CAAW,QAAX,CAAoB;AAClB,cAAM,OAAK,OAAL,CAAa;AADD,OAApB;AAGA,aAAK,QAAQ,OAAb,EAAsB,IAAtB,CAA2B,qBAAW,eAAtC;AACD,KALD;;AAOA,+DAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACW,KAAK,SAAL,EADX;;AAAA;AAAA;AAAA,6BACgC,sBAAY,UAD5C;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAEe,QAAN,aAFT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;;;;;AA/BmB;AAyCpB;;;;uBAKE,K,EAAO,O,EAAS;AAAA;;AACjB,WAAK,QAAQ,OAAb,EAAsB,EAAtB,CAAyB,KAAzB,EAAgC,OAAhC;AACA,aAAO,YAAM;AACX,eAAK,GAAL,CAAS,KAAT,EAAgB,OAAhB;AACD,OAFD;AAGD;;;wBACG,K,EAAO,O,EAAS;AAClB,WAAK,QAAQ,OAAb,EAAsB,GAAtB,CAA0B,KAA1B,EAAiC,OAAjC;AACD;;;wBAZa;AACZ,aAAO,2BAAe,KAAK,MAApB,CAAP;AACD;;;wBAYmB;AAClB,aAAO,KAAK,KAAL,CAAW,YAAX,CAAwB,MAAxB,CAA+B;AAAA,eAAK,EAAE,SAAF,KAAgB,cAArB;AAAA,OAA/B,CAAP;AACD;;;wBAEuB;AACtB,aAAO,KAAK,KAAL,CAAW,YAAX,CAAwB,IAAxB,CAA6B;AAAA,eAAK,EAAE,SAAF,KAAgB,mBAArB;AAAA,OAA7B,CAAP;AACD;;;wBAEkB;AACjB,aAAO,KAAK,KAAL,CAAW,YAAlB;AACD;;;wBAEqB;AACpB,aAAO,KAAK,KAAL,CAAW,aAAX,CAAyB,eAAhC;AACD;;;wBAEgB;AACf,aAAO,KAAK,KAAL,CAAW,YAAX,CAAwB,MAAxB,CAA+B;AAAA,eAAK,EAAE,QAAF,CAAW,OAAX,CAAmB,WAAnB,IAAkC,CAAC,CAAxC;AAAA,OAA/B,CAAP;AACD;;;;;kBA3EkB,I","file":"index.js","sourcesContent":["import RcModule from '../../lib/rc-module';\nimport SymbolMap from '../../lib/symbol-map';\nimport { extractData, fetchList } from '../../lib/utils';\nimport loginStatus from '../../enums/login-status';\nimport userActions from './user-actions';\nimport getUserReducer from './user-reducer';\nimport Emitter from 'component-emitter';\nimport userEvents from '../../enums/user-events';\n\nconst symbols = new SymbolMap([\n  'api',\n  'auth',\n  'platform',\n  'emitter',\n  'settings',\n]);\n\nconst initialState = {\n  test: true,\n};\n\nfunction getUserSettingsReducer(prefix) {\n  return (state, action) => {\n    if (typeof state === 'undefined') return Object.assign({}, initialState);\n    if (!action) return state;\n    switch (action.type) {\n      default:\n        return state;\n    }\n  };\n}\n\nasync function loadInfo() {\n  try {\n    const [\n      accountInfo,\n      extensionInfo,\n      dialingPlans,\n      phoneNumbers,\n      forwardingNumbers,\n      blockedNumbers,\n    ] = (await Promise.all([\n      this[symbols.api].account().loadAccount(),\n      this[symbols.api].extension().loadExtensionInfo(),\n      this::fetchList(options => (\n        this[symbols.api].account().listDialingPlans(options)\n      )),\n      this::fetchList(options => (\n        this[symbols.api].extension().listExtensionPhoneNumbers(options)\n      )),\n      this::fetchList(options => (\n        this[symbols.api].forwardingNumbers().listExtensionForwardingNumbers(options)\n      )),\n      this::fetchList(options => (\n        this[symbols.api].blockedNumbers().listBlockedNumbers(options)\n      )),\n    ])).map(data => extractData(data));\n\n    this.store.dispatch({\n      type: this.actions.loadUserInfo,\n      payload: {\n        accountInfo,\n        extensionInfo,\n        dialingPlans,\n        phoneNumbers,\n        forwardingNumbers,\n        blockedNumbers,\n      },\n    });\n    this[symbols.emitter].emit(userEvents.userInfoLoaded);\n  } catch (e) {\n    // TODO send error out\n    console.log(e);\n    this[symbols.auth].logout();\n  }\n}\n\nexport default class User extends RcModule {\n  constructor(options) {\n    super({\n      ...options,\n      actions: userActions,\n    });\n    const {\n      api,\n      auth,\n      platform,\n      settings,\n    } = options;\n    this[symbols.api] = api;\n    this[symbols.auth] = auth;\n    this[symbols.platform] = platform;\n    this[symbols.emitter] = new Emitter();\n    this[symbols.settings] = settings;\n\n    settings.registerReducer('user', getUserSettingsReducer());\n\n    // load info on login\n    platform.on(platform.events.loginSuccess, () => {\n      this::loadInfo();\n    });\n    // unload info on logout\n    platform.on(platform.events.logoutSuccess, () => {\n      this.store.dispatch({\n        type: this.actions.clearUserInfo,\n      });\n      this[symbols.emitter].emit(userEvents.userInfoCleared);\n    });\n    // load info if already logged in\n    (async () => {\n      if (await auth.getStatus() === loginStatus.userAccess) {\n        await this::loadInfo();\n      }\n    })();\n\n    /**\n     * TODO:\n     *   1. Dialing Plan Checking\n     */\n  }\n  get reducer() {\n    return getUserReducer(this.prefix);\n  }\n\n  on(event, handler) {\n    this[symbols.emitter].on(event, handler);\n    return () => {\n      this.off(event, handler);\n    };\n  }\n  off(event, handler) {\n    this[symbols.emitter].off(event, handler);\n  }\n\n  get directNumbers() {\n    return this.state.phoneNumbers.filter(n => n.usageType === 'DirectNumber');\n  }\n\n  get mainCompanyNumber() {\n    return this.state.phoneNumbers.find(n => n.usageType === 'MainCompanyNumber');\n  }\n\n  get dialingPlans() {\n    return this.state.dialingPlans;\n  }\n\n  get extensionNumber() {\n    return this.state.extensionInfo.extensionNumber;\n  }\n\n  get smsNumbers() {\n    return this.state.phoneNumbers.filter(n => n.features.indexOf('SmsSender') > -1);\n  }\n\n}\n"]}