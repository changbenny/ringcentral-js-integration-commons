{"version":3,"sources":["rc-phone.js"],"names":[],"mappings":"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","file":"rc-phone.js","sourcesContent":["import addModule from './lib/add-module';\nimport RingCentral from 'ringcentral';\nimport RingCentralClient from 'ringcentral-client';\n\nimport RcModule from './lib/rc-module';\n\nimport Settings from './modules/settings';\nimport Brand from './modules/brand';\nimport Auth from './modules/auth';\nimport Subscription from './modules/subscription';\nimport User from './modules/user';\nimport Webphone from './modules/webphone';\nimport { combineReducers, createStore } from 'redux';\n\nconst REDUCER = Symbol();\n\n\nexport default class RcPhone extends RcModule {\n  constructor(options) {\n    const {\n      getState,\n      prefix = 'rc',\n      sdkSettings,\n      defaultBrand,\n    } = options;\n    let {\n      promiseForStore,\n    } = options;\n    let resolver;\n    if (!promiseForStore) {\n      promiseForStore = new Promise((resolve) => {\n        resolver = resolve;\n      });\n    }\n    super({\n      promiseForStore,\n      getState,\n    });\n\n    this::addModule('sdk', new RingCentral({\n\n      cachePrefix: `${prefix}-`,\n      ...sdkSettings,\n    }));\n\n    this::addModule('platform', this.sdk.platform());\n\n    this::addModule('api', new RingCentralClient(this.sdk));\n\n    this::addModule('auth', new Auth({\n      promiseForStore,\n      getState: () => this.state.auth,\n      prefix,\n      platform: this.platform,\n    }));\n\n    this::addModule('settings', new Settings({\n      promiseForStore,\n      getState: () => this.state.settings,\n    }));\n\n    this::addModule('defaultBrand', new Brand({\n      promiseForStore,\n      prefix: `${prefix}-default`,\n      getState: () => this.state.defaultBrand,\n      ...defaultBrand,\n    }));\n\n    this::addModule('subscription', new Subscription({\n      promiseForStore,\n      getState: () => this.state.subscription,\n      prefix,\n      api: this.api,\n      platform: this.platform,\n      sdk: this.sdk,\n      auth: this.auth,\n    }));\n\n    this::addModule('user', new User({\n      promiseForStore,\n      getState: () => this.state.user,\n      prefix,\n      api: this.api,\n      platform: this.platform,\n      settings: this.settings,\n    }));\n\n    this::addModule('webphone', new Webphone({\n      promiseForStore,\n      getState: () => this.state.webphone,\n      prefix,\n      api: this.api,\n      platform: this.platform,\n      settings: this.settings,\n      auth: this.auth,\n    }));\n\n    // combine reducers\n    this[REDUCER] = combineReducers({\n      auth: this.auth.reducer,\n      defaultBrand: this.defaultBrand.reducer,\n      subscription: this.subscription.reducer,\n      user: this.user.reducer,\n      webphone: this.webphone.reducer,\n      settings: this.settings.reducer,\n    });\n    if (resolver) {\n      resolver(createStore(this.reducer));\n    }\n  }\n  get reducer() {\n    return this[REDUCER];\n  }\n}\n"]}