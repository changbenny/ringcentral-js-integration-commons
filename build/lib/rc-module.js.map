{"version":3,"sources":["lib/rc-module.js"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA;;;;AACA;;AACA;;;;;;AAEA,IAAM,UAAU,wBAAc,CAC5B,OAD4B,EAE5B,UAF4B,EAG5B,QAH4B,EAI5B,SAJ4B,EAK5B,SAL4B,CAAd,CAAhB;;;;;;;;AAcA,SAAS,cAAT,CAAwB,KAAxB,EAA+B;AAC7B,MAAI,OAAO,KAAP,KAAiB,WAArB,EAAkC,OAAO,EAAP;AAClC,SAAO,KAAP;AACD;;;;;;;AAOD,SAAS,aAAT,CAAuB,KAAvB,EAA8B;AAC5B,SAAO,KAAP;AACD;;AAED,SAAS,eAAT,GAA2B;AACzB,SAAO,KAAK,KAAL,CAAW,QAAX,EAAP;AACD;;;;;;;;IAOoB,Q;;;;;AAInB,0BAKG;AAAA;;AAAA,QAJD,eAIC,QAJD,eAIC;AAAA,6BAHD,QAGC;AAAA,QAHD,QAGC,iCAHU,eAGV;AAAA,QAFD,MAEC,QAFD,MAEC;AAAA,QADD,OACC,QADD,OACC;AAAA;;;AAED,SAAK,QAAQ,OAAb,IAAwB,4BAAxB;AACA,SAAK,QAAQ,QAAb,IAAyB,QAAzB;AACA,SAAK,QAAQ,MAAb,IAAuB,MAAvB;AACA,SAAK,QAAQ,OAAb,IAAwB,WAAW,gCAAc,OAAd,EAAuB,MAAvB,CAAnC;AACA,oBAAgB,IAAhB,CAAqB,UAAC,KAAD,EAAW;AAC9B,YAAK,QAAQ,KAAb,IAAsB,KAAtB;AACD,KAFD;AAGD;;;;;;;;;;;;uBAQE,K,EAAO,O,EAAS;AAAA;;AACjB,WAAK,QAAQ,OAAb,EAAsB,EAAtB,CAAyB,KAAzB,EAAgC,OAAhC;AACA,aAAO,YAAM;AACX,eAAK,QAAQ,OAAb,EAAsB,GAAtB,CAA0B,KAA1B,EAAiC,OAAjC;AACD,OAFD;AAGD;;;;;;;;;;yBAOI,K,EAAO,O,EAAS;AAAA;;AACnB,WAAK,QAAQ,OAAb,EAAsB,IAAtB,CAA2B,KAA3B,EAAkC,OAAlC;AACA,aAAO,YAAM;AACX,eAAK,QAAQ,OAAb,EAAsB,GAAtB,CAA0B,KAA1B,EAAiC,OAAjC;AACD,OAFD;AAGD;;;;;;;;;yBAMI,K,EAAgB;AAAA;;AAAA,wCAAN,IAAM;AAAN,YAAM;AAAA;;AACnB,+BAAK,QAAQ,OAAb,GAAsB,IAAtB,0BAA2B,KAA3B,SAAqC,IAArC;AACD;;;;;;;;;wBAMG,K,EAAO,O,EAAS;AAClB,WAAK,QAAQ,OAAb,EAAsB,GAAtB,CAA0B,KAA1B,EAAiC,OAAjC;AACD;;;wBAEW;AACV,aAAO,KAAK,QAAQ,QAAb,GAAP;AACD;;;wBACa;AACZ,aAAO,cAAP;AACD;;;wBACW;AACV,aAAO,KAAK,QAAQ,KAAb,CAAP;AACD;;;wBACY;AACX,aAAO,KAAK,QAAQ,MAAb,CAAP;AACD;;;wBACa;AACZ,aAAO,KAAK,QAAQ,OAAb,CAAP;AACD;;;;;kBA3EkB,Q","file":"rc-module.js","sourcesContent":["import SymbolMap from './symbol-map';\nimport { prefixActions } from './redux-helper';\nimport EventEmitter from 'event-emitter';\n\nconst symbols = new SymbolMap([\n  'store',\n  'getState',\n  'prefix',\n  'actions',\n  'emitter',\n]);\n\n/**\n * @function\n * @param {Object} state\n * @return {Object}\n * @description Default reducer if module does not has its own reducer.\n */\nfunction defaultReducer(state) {\n  if (typeof state === 'undefined') return {};\n  return state;\n}\n/**\n * @function\n * @param {Object} state\n * @return {Object}\n * @description Default parent state to module state mapper.\n */\nfunction defaultMapper(state) {\n  return state;\n}\n\nfunction defaultGetState() {\n  return this.store.getState();\n}\n\n/**\n * @class\n * @default\n * @description Base module class.\n */\nexport default class RcModule {\n  /**\n   * @constructor\n   */\n  constructor({\n    promiseForStore,\n    getState = defaultGetState,\n    prefix,\n    actions,\n  }) {\n    // Extending EventEmitter breaks some mechanic, so we wire emitter up like this instead.\n    this[symbols.emitter] = new EventEmitter();\n    this[symbols.getState] = getState;\n    this[symbols.prefix] = prefix;\n    this[symbols.actions] = actions && prefixActions(actions, prefix);\n    promiseForStore.then((store) => {\n      this[symbols.store] = store;\n    });\n  }\n\n  /**\n   * @function\n   * @param {String} event\n   * @param {Function} handler\n   * @return {Function} Unregister function.\n   */\n  on(event, handler) {\n    this[symbols.emitter].on(event, handler);\n    return () => {\n      this[symbols.emitter].off(event, handler);\n    };\n  }\n  /**\n   * @function\n   * @param {String} event\n   * @param {Function)} handler\n   * @return {Function} Unregister function.\n   */\n  once(event, handler) {\n    this[symbols.emitter].once(event, handler);\n    return () => {\n      this[symbols.emitter].off(event, handler);\n    };\n  }\n  /**\n   * @function\n   * @param {String} event\n   * @param {...args} args\n   */\n  emit(event, ...args) {\n    this[symbols.emitter].emit(event, ...args);\n  }\n  /**\n   * @function\n   * @param {String} event\n   * @param {Function} handler\n   */\n  off(event, handler) {\n    this[symbols.emitter].off(event, handler);\n  }\n\n  get state() {\n    return this[symbols.getState]();\n  }\n  get reducer() {\n    return defaultReducer;\n  }\n  get store() {\n    return this[symbols.store];\n  }\n  get prefix() {\n    return this[symbols.prefix];\n  }\n  get actions() {\n    return this[symbols.actions];\n  }\n\n}\n"]}