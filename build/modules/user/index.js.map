{"version":3,"sources":["modules/user/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import RcModule from '../../lib/rc-module';\nimport SymbolMap from '../../lib/symbol-map';\nimport { extractData, fetchList, emit } from '../../lib/utils';\nimport userActions from './user-actions';\nimport getUserReducer from './user-reducer';\nimport { userEvents, userEventTypes } from './user-events';\n\nconst symbols = new SymbolMap([\n  'api',\n  'platform',\n  'settings',\n]);\n\n// const initialState = {\n//   test: true,\n// };\n\n// function getUserSettingsReducer(prefix) {\n//   return (state, action) => {\n//     if (typeof state === 'undefined') return Object.assign({}, initialState);\n//     if (!action) return state;\n//     switch (action.type) {\n//       default:\n//         return state;\n//     }\n//   };\n// }\n\n/**\n * @function\n * @param {String} dataType\n * @param {function} loadFunction - async loader function returning a promise\n * @return {Promise}\n * @description Generic data loading logic with events\n */\nasync function loadData(dataType, loadFunction) {\n  this.store.dispatch({\n    type: this.actions[`load${dataType}`],\n  });\n  this.emit(userEvents[`load${dataType}`]);\n  try {\n    const payload = await this::loadFunction();\n    this.store.dispatch({\n      type: this.actions[`load${dataType}Success`],\n      payload,\n    });\n    this::emit(userEventTypes.userInfoChanged, userEvents[`load${dataType}Success`]);\n  } catch (error) {\n    this.store.dispatch({\n      type: this.actions[`load${dataType}Failed`],\n    });\n    this.emit(userEvents[`load${dataType}Failed`]);\n    throw error;\n  }\n}\n\n/**\n * @function\n * @return {Promise<Object>}\n * @description Fetch account info and extract the data\n */\nasync function extractAccountInfo() {\n  return extractData(await this[symbols.api].account().loadAccount());\n}\nasync function loadAccountInfo() {\n  return await this::loadData('AccountInfo', extractAccountInfo);\n}\n\nasync function extractExtensionInfo() {\n  return extractData(await this[symbols.api].extension().loadExtensionInfo());\n}\nasync function loadExtensionInfo() {\n  return await this::loadData('ExtensionInfo', extractExtensionInfo);\n}\n\nasync function extractDialingPlans() {\n  return extractData(await this::fetchList(options => (\n    this[symbols.api].account().listDialingPlans(options)\n  )));\n}\nasync function loadDialingPlans() {\n  return await this::loadData('DialingPlans', extractDialingPlans);\n}\n\nasync function extractPhoneNumbers() {\n  return extractData(await this::fetchList(options => (\n    this[symbols.api].extension().listExtensionPhoneNumbers(options)\n  )));\n}\nasync function loadPhoneNumbers() {\n  return await this::loadData('PhoneNumbers', extractPhoneNumbers);\n}\n\nasync function extractForwardingNumbers() {\n  return extractData(await this::fetchList(options => (\n    this[symbols.api].forwardingNumbers().listExtensionForwardingNumbers(options)\n  )));\n}\nasync function loadForwardingNumbers() {\n  return await this::loadData('ForwardingNumbers', extractForwardingNumbers);\n}\n\nasync function extractBlockedNumbers() {\n  return extractData(await this::fetchList(options => (\n    this[symbols.api].blockedNumbers().listBlockedNumbers(options)\n  )));\n}\nasync function loadBlockedNumbers() {\n  return await this::loadData('BlockedNumbers', extractBlockedNumbers);\n}\n\n/**\n * @function\n * @return {Promise}\n */\nasync function loadInfo() {\n  try {\n    await Promise.all([\n      this::loadAccountInfo(),\n      this::loadExtensionInfo(),\n      this::loadDialingPlans(),\n      this::loadPhoneNumbers(),\n      this::loadForwardingNumbers(),\n      this::loadBlockedNumbers(),\n    ]);\n    // this.emit(userEvents.userInfoLoaded);\n  } catch (e) {\n    // TODO send error out\n    console.log(e);\n  }\n}\n\n/**\n * @class User\n * @extends RcModule\n * @default\n * @export\n */\nexport default class User extends RcModule {\n  /**\n   * @function\n   * @param {Object} options\n   */\n  constructor(options) {\n    super({\n      ...options,\n      actions: userActions,\n    });\n    const {\n      api,\n      platform,\n      settings,\n    } = options;\n    this[symbols.api] = api;\n    this[symbols.platform] = platform;\n    this[symbols.settings] = settings;\n\n    // settings.registerReducer('user', getUserSettingsReducer());\n\n    // load info on login\n    platform.on(platform.events.loginSuccess, () => {\n      this::loadInfo();\n    });\n    // unload info on logout\n    platform.on(platform.events.logoutSuccess, () => {\n      this.store.dispatch({\n        type: this.actions.clearUserInfo,\n      });\n      // this.emit(userEvents.userInfoCleared);\n    });\n\n\n    // load info if already logged in\n    (async () => {\n      if (await platform.loggedIn()) {\n        await this::loadInfo();\n      }\n    })();\n\n    /**\n     * TODO:\n     *   1. Dialing Plan Checking\n     */\n  }\n  get reducer() {\n    return getUserReducer(this.prefix);\n  }\n\n  get events() {\n    return userEvents;\n  }\n\n  get eventTypes() {\n    return userEventTypes;\n  }\n\n  get directNumbers() {\n    return this.state.phoneNumbers.filter(n => n.usageType === 'DirectNumber');\n  }\n\n  get mainCompanyNumber() {\n    return this.state.phoneNumbers.find(n => n.usageType === 'MainCompanyNumber');\n  }\n\n  get dialingPlans() {\n    return this.state.dialingPlans;\n  }\n\n  get extensionNumber() {\n    return this.state.extensionInfo.extensionNumber;\n  }\n\n  get smsNumbers() {\n    return this.state.phoneNumbers.filter(n => n.features.indexOf('SmsSender') > -1);\n  }\n\n}\n"]}