{"version":3,"sources":["modules/webphone/webphone-reducer.js"],"names":[],"mappings":";;;;;;;;;;kBAkBwB,U;;AAlBxB;;AACA;;;;AACA;;;;AAEA;;;;;;AAEA,IAAM,eAAe;AACnB,UAAQ,yBAAe,WADJ;;AAGnB,YAAU,EAHS;AAInB,cAAY,EAJO;;AAMnB,kBAAgB,IANG;AAOnB,iBAAe,IAPI;AAQnB,aAAW,4BARQ;AASnB,SAAO;AATY,CAArB;;AAYe,SAAS,UAAT,CAAoB,MAApB,EAA4B;AACzC,MAAM,UAAU,2DAA+B,MAA/B,CAAhB;;AAEA,SAAO,UAAC,KAAD,EAAQ,MAAR,EAAmB;AACxB,QAAI,OAAO,KAAP,KAAiB,WAArB,EAAkC,OAAO,sBAAc,EAAd,EAAkB,YAAlB,CAAP;AAClC,QAAI,CAAC,MAAL,EAAa,OAAO,KAAP;AACb,YAAQ,OAAO,IAAf;;AAEE,WAAK,QAAQ,eAAb;AACE,eAAO,sBAAc,EAAd,EAAkB,KAAlB,EAAyB;AAC9B,kBAAQ,yBAAe;AADO,SAAzB,CAAP;AAGF,WAAK,QAAQ,aAAb;AACE,eAAO,sBAAc,EAAd,EAAkB,KAAlB,EAAyB;AAC9B,kBAAQ,yBAAe,cADO;AAE9B,iBAAO,OAAO;AAFgB,SAAzB,CAAP;AAIF,WAAK,QAAQ,UAAb;AACE,eAAO,YAAP;AACF,WAAK,QAAQ,IAAb;AACE,eAAO,sBAAc,EAAd,EAAkB,KAAlB,EAAyB;AAC9B,kBAAQ,yBAAe,cADO;AAE9B,oBAAU,OAAO,OAAP,CAAe,QAFK;AAG9B,sBAAY,OAAO,OAAP,CAAe;AAHG,SAAzB,CAAP;AAKF,WAAK,QAAQ,YAAb;AACE,eAAO,sBAAc,EAAd,EAAkB,KAAlB,EAAyB;AAC9B,kBAAQ,yBAAe,YADO;AAE9B,0BAAgB,OAAO,OAAP,CAAe,cAFD;AAG9B,yBAAe,OAAO,OAAP,CAAe;AAHA,SAAzB,CAAP;;AAMF,WAAK,QAAQ,WAAb;AACE,eAAO,sBAAc,EAAd,EAAkB,KAAlB,EAAyB;AAC9B,kBAAQ,yBAAe,aADO;AAE9B,0BAAgB,OAAO,OAAP,CAAe,cAFD;AAG9B,yBAAe,OAAO,OAAP,CAAe;AAHA,SAAzB,CAAP;AAKF,WAAK,QAAQ,UAAb;AACE,eAAO,sBAAc,EAAd,EAAkB,KAAlB,EAAyB;AAC9B,kBAAQ,yBAAe;AADO,SAAzB,CAAP;AAGF,WAAK,QAAQ,OAAb;AACE,eAAO,sBAAc,EAAd,EAAkB,YAAlB,EAAgC;AACrC,kBAAQ,yBAAe,iBADc;AAErC,iBAAO,OAAO;AAFuB,SAAhC,CAAP;AAIF,WAAK,QAAQ,SAAb;AACE,eAAO,sBAAc,EAAd,EAAkB,KAAlB,EAAyB;AAC9B,kBAAQ,yBAAe,UADO;AAE9B,iBAAO,OAAO;AAFgB,SAAzB,CAAP;AAIF,WAAK,QAAQ,aAAb;AACE,eAAO,sBAAc,EAAd,EAAkB,KAAlB,EAAyB;AAC9B,qBAAW,2BAAY,MAAM,SAAlB,EAA6B,OAAO,SAApC;AADmB,SAAzB,CAAP;AAGF,WAAK,QAAQ,YAAb;AACE,eAAO,sBAAc,EAAd,EAAkB,YAAlB,EAAgC;AACrC,iBAAO,OAAO;AADuB,SAAhC,CAAP;;AAIF;AACE,eAAO,KAAP;AAxDJ;AA0DD,GA7DD;AA8DD","file":"webphone-reducer.js","sourcesContent":["import { prefixActions } from '../../lib/redux-helper';\nimport webphoneActions from './webphone-actions';\nimport webphoneStatus from './webphone-status';\n\nimport callReducer from './call-reducer';\n\nconst initialState = {\n  status: webphoneStatus.preRegister,\n  // assign from UI\n  toNumber: '',\n  fromNumber: '',\n  // sip info return from sip server\n  remoteIdentity: null,\n  localIdentity: null,\n  operation: callReducer(),\n  error: null,\n};\n\nexport default function getReducer(prefix) {\n  const actions = prefixActions(webphoneActions, prefix);\n\n  return (state, action) => {\n    if (typeof state === 'undefined') return Object.assign({}, initialState);\n    if (!action) return state;\n    switch (action.type) {\n\n      case actions.registerSuccess:\n        return Object.assign({}, state, {\n          status: webphoneStatus.registerSuccessed,\n        });\n      case actions.registerError:\n        return Object.assign({}, state, {\n          status: webphoneStatus.registerFailed,\n          error: action.error,\n        });\n      case actions.unregister:\n        return initialState;\n      case actions.call:\n        return Object.assign({}, state, {\n          status: webphoneStatus.callConnecting,\n          toNumber: action.payload.toNumber,\n          fromNumber: action.payload.fromNumber,\n        });\n      case actions.callIncoming:\n        return Object.assign({}, state, {\n          status: webphoneStatus.callIncoming,\n          remoteIdentity: action.payload.remoteIdentity,\n          localIdentity: action.payload.localIdentity,\n        });\n      // TODO: update fromNumber, toNumber\n      case actions.callConnect:\n        return Object.assign({}, state, {\n          status: webphoneStatus.callConnected,\n          remoteIdentity: action.payload.remoteIdentity,\n          localIdentity: action.payload.localIdentity,\n        });\n      case actions.callAccept:\n        return Object.assign({}, state, {\n          status: webphoneStatus.callConnected,\n        });\n      case actions.callEnd:\n        return Object.assign({}, initialState, {\n          status: webphoneStatus.registerSuccessed,\n          error: action.error,\n        });\n      case actions.callError:\n        return Object.assign({}, state, {\n          status: webphoneStatus.callFailed,\n          error: action.error,\n        });\n      case actions.callOperation:\n        return Object.assign({}, state, {\n          operation: callReducer(state.operation, action.operation),\n        });\n      case actions.sessionError:\n        return Object.assign({}, initialState, {\n          error: action.error,\n        });\n\n      default:\n        return state;\n    }\n  };\n}\n"]}