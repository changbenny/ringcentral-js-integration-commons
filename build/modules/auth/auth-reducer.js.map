{"version":3,"sources":["modules/auth/auth-reducer.js"],"names":[],"mappings":";;;;;;;;;;kBASwB,c;;AATxB;;AACA;;;;AACA;;;;;;AAEA,IAAM,eAAe;AACnB,UAAQ,sBAAY,OADD;AAEnB,aAAW;AAFQ,CAArB;;AAKe,SAAS,cAAT,CAAwB,MAAxB,EAAgC;AAC7C,MAAM,UAAU,uDAA2B,MAA3B,CAAhB;AACA,SAAO,UAAC,KAAD,EAAQ,MAAR,EAAmB;AACxB,QAAI,OAAO,KAAP,KAAiB,WAArB,EAAkC,OAAO,sBAAc,EAAd,EAAkB,YAAlB,CAAP;AAClC,QAAI,CAAC,MAAL,EAAa,OAAO,KAAP;AACb,YAAQ,OAAO,IAAf;;AAEE,WAAK,QAAQ,IAAb;AACE,eAAO,sBAAc,EAAd,EAAkB,KAAlB,EAAyB,EAAE,QAAQ,OAAO,MAAjB,EAAzB,CAAP;;AAEF,WAAK,QAAQ,KAAb;AACE,eAAO;AACL,kBAAQ,sBAAY,SADf;AAEL,qBAAW;AAFN,SAAP;;AAKF,WAAK,QAAQ,YAAb;AACE,eAAO;AACL,kBAAQ,sBAAY,QADf;AAEL,qBAAW;AAFN,SAAP;;AAKF,WAAK,QAAQ,aAAb;AACE,eAAO;AACL,kBAAQ,sBAAY,WADf;AAEL,qBAAW;AAFN,SAAP;;AAKF,WAAK,QAAQ,UAAb;AACE,eAAO;AACL,iBAAO,sBAAY,WADd;AAEL,qBAAW,OAAO;AAFb,SAAP;;AAKF,WAAK,QAAQ,WAAb;AACE,eAAO;AACL,kBAAQ,sBAAY,QADf;AAEL,qBAAW,OAAO;AAFb,SAAP;;AAKF;AACE,eAAO,KAAP;AApCJ;AAsCD,GAzCD;AA0CD","file":"auth-reducer.js","sourcesContent":["import { prefixActions } from '../../lib/redux-helper';\nimport authActions from './auth-actions';\nimport loginStatus from './login-status';\n\nconst initialState = {\n  status: loginStatus.pending,\n  authError: null,\n};\n\nexport default function getAuthReducer(prefix) {\n  const actions = prefixActions(authActions, prefix);\n  return (state, action) => {\n    if (typeof state === 'undefined') return Object.assign({}, initialState);\n    if (!action) return state;\n    switch (action.type) {\n\n      case actions.init:\n        return Object.assign({}, state, { status: action.status });\n\n      case actions.login:\n        return {\n          status: loginStatus.loggingIn,\n          authError: null,\n        };\n\n      case actions.loginSuccess:\n        return {\n          status: loginStatus.loggedIn,\n          authError: null,\n        };\n\n      case actions.logoutSuccess:\n        return {\n          status: loginStatus.notLoggedIn,\n          authError: null,\n        };\n\n      case actions.loginError:\n        return {\n          state: loginStatus.notLoggedIn,\n          authError: action.error,\n        };\n\n      case actions.logoutError:\n        return {\n          status: loginStatus.loggedIn,\n          authError: action.error,\n        };\n\n      default:\n        return state;\n    }\n  };\n}\n"]}