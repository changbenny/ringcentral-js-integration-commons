{"version":3,"sources":["lib/enum.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;AAEA,IAAM,iBAAiB,GAAG,cAA1B;;IAEqB,I;;;AACnB,gBAAY,UAAZ,EAAwB;AAAA;;AAAA,8GAChB,sBAAc,EAAd,EAAkB,UAAlB,CADgB;;AAAA,+BAEX,GAFW;AAGpB,UAAI,eAAe,IAAf,CAAoB,UAApB,EAAgC,GAAhC,CAAJ,EAA0C;;AAExC,6CAA4B,GAA5B,EAAiC;AAC/B,aAD+B,iBACzB;AACJ,mBAAO,KAAK,IAAL,CAAU,GAAV,CAAP;AACD,WAH8B;;AAI/B,sBAAY;AAJmB,SAAjC;AAMD;AAXmB;;AAEtB,SAAK,IAAM,GAAX,IAAkB,UAAlB,EAA8B;AAAA,YAAnB,GAAmB;AAU7B;AAZqB;AAavB;;;;;;;;;;;;;;;;;;;;;;;kBAdkB,I","file":"enum.js","sourcesContent":["import Wrapper from './wrapper';\n\nconst hasOwnProperty = {}.hasOwnProperty;\n\nexport default class Enum extends Wrapper {\n  constructor(definition) {\n    super(Object.assign({}, definition));\n    for (const key in definition) {\n      if (hasOwnProperty.call(definition, key)) {\n        // defineProperty can be a performance hit\n        Object.defineProperty(this, key, {\n          get() {\n            return this.base[key];\n          },\n          enumerable: true,\n        });\n      }\n    }\n  }\n}\n\n/*\n * //with Proxy support\n *const enumHandler = {\n *  get(target, key) {\n *    return target[key];\n *  },\n *  set() {\n *    return;\n *  }\n *};\n *Enum = class Enum extends Proxy {\n *  constructor(definition) {\n *    super(Object.assign({}, definition), enumHandler);\n *  }\n *}\n */\n\n"]}