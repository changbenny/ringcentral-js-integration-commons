{"version":3,"sources":["modules/auth/auth-reducer.js"],"names":[],"mappings":";;;;;;;;;;kBAIwB,U;;AAJxB;;;;AACA;;AACA;;;;;;AAEe,SAAS,UAAT,CAAoB,YAApB,EAAkC,MAAlC,EAA0C;AACvD,MAAM,UAAU,uDAA2B,MAA3B,CAAhB;AACA,SAAO,UAAC,KAAD,EAAQ,MAAR,EAAmB;AACxB,QAAI,OAAO,KAAP,KAAiB,WAArB,EAAkC,OAAO,sBAAc,EAAd,EAAkB,YAAlB,CAAP;;AAElC,QAAI,CAAC,MAAL,EAAa,OAAO,KAAP;;AAEb,YAAQ,OAAO,IAAf;;AAEE,WAAK,QAAQ,QAAb;AACE,eAAO,sBAAc,EAAd,EAAkB,KAAlB,EAAyB,EAAE,QAAQ,OAAO,MAAjB,EAAzB,CAAP;;AAEF,WAAK,QAAQ,KAAb;AACE,eAAO,sBAAc,EAAd,EAAkB,KAAlB,EAAyB;AAC9B,kBAAQ,sBAAY,iBADU;AAE9B,iBAAO;AAFuB,SAAzB,CAAP;;AAKF,WAAK,QAAQ,YAAb;AACE,eAAO,sBAAc,EAAd,EAAkB,KAAlB,EAAyB;AAC9B,kBAAQ,sBAAY,UADU;AAE9B,iBAAO;AAFuB,SAAzB,CAAP;;AAKF,WAAK,QAAQ,aAAb;AACE,eAAO,sBAAc,EAAd,EAAkB,KAAlB,EAAyB;AAC9B,kBAAQ,sBAAY,WADU;AAE9B,iBAAO;AAFuB,SAAzB,CAAP;;AAKF,WAAK,QAAQ,UAAb;AACE,eAAO,sBAAc,EAAd,EAAkB,KAAlB,EAAyB;AAC9B,iBAAO,sBAAY,WADW;AAE9B,iBAAO,OAAO;AAFgB,SAAzB,CAAP;;AAKF,WAAK,QAAQ,WAAb;AACE,eAAO,sBAAc,EAAd,EAAkB,KAAlB,EAAyB;AAC9B,iBAAO,OAAO;AADgB,SAAzB,CAAP;;AAIF;AACE,eAAO,KAAP;AAnCJ;AAqCD,GA1CD;AA2CD","file":"auth-reducer.js","sourcesContent":["import authActions from './auth-actions';\nimport { prefixActions } from '../../lib/redux-helper';\nimport loginStatus from '../../enums/login-status';\n\nexport default function getReducer(initialState, prefix) {\n  const actions = prefixActions(authActions, prefix);\n  return (state, action) => {\n    if (typeof state === 'undefined') return Object.assign({}, initialState);\n\n    if (!action) return state;\n\n    switch (action.type) {\n\n      case actions.initAuth:\n        return Object.assign({}, state, { status: action.status });\n\n      case actions.login:\n        return Object.assign({}, state, {\n          status: loginStatus.userAccessPending,\n          error: null,\n        });\n\n      case actions.loginSuccess:\n        return Object.assign({}, state, {\n          status: loginStatus.userAccess,\n          error: null,\n        });\n\n      case actions.logoutSuccess:\n        return Object.assign({}, state, {\n          status: loginStatus.notLoggedIn,\n          error: null,\n        });\n\n      case actions.loginError:\n        return Object.assign({}, state, {\n          state: loginStatus.notLoggedIn,\n          error: action.error,\n        });\n\n      case actions.logoutError:\n        return Object.assign({}, state, {\n          error: action.error,\n        });\n\n      default:\n        return state;\n    }\n  };\n}\n"]}