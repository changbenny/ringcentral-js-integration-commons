{"version":3,"sources":["modules/subscription/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import RcModule from '../../lib/rc-module';\nimport SymbolMap from '../../lib/symbol-map';\nimport subscriptionActions from './subscription-actions';\nimport getSubscriptionReducer from './subscription-reducer';\nimport { subscriptionEvents, subscriptionEventTypes } from './subscription-events';\nimport subscriptionStatus from './subscription-status';\nimport Enum from '../../lib/enum';\nimport { emit } from '../../lib/utils';\n\nconst symbols = new SymbolMap([\n  'auth',\n  'sdk',\n  'platform',\n  'subscription',\n  'filterCache',\n]);\n\n\nconst filterRegex = {\n  message: /message-store$/,\n  presence: /presence(\\?detailedTelephonyState=true)?$/,\n  telephony: /presence\\?detailedTelephonyState=true$/,\n  line: /presence\\/line$/,\n  linePresence: /presence\\/line\\/presence(\\?detailedTelephonyState=true)?$/,\n  lineTelephony: /presence\\/line\\/presence\\?detailedTelephonyState=true$/,\n};\n\n/**\n * @function\n * @param {Object} message\n * @description Handles messages delivered by the subscripton\n */\nfunction messageHandler(message) {\n  // determine which events the message falls under\n  const events = [];\n  if (filterRegex.message.test(message.event)) {\n    events.push('message');\n  } else if (filterRegex.line.test(message.event)) {\n    events.push('line');\n  } else if (filterRegex.linePresence.test(message.event)) {\n    events.push('linePresence');\n    if (filterRegex.lineTelephony.test(message.event)) events.push('lineTelephony');\n  } else if (filterRegex.presence.test(message.event)) {\n    events.push('presence');\n    if (filterRegex.telephony.test(message.event)) events.push('telephony');\n  }\n  // dispatch the message in redux manner\n  this.store.dispatch({\n    type: this.actions.notification,\n    eventTypes: events,\n    payload: message,\n  });\n  // emit the messages as events\n  events.forEach(event => {\n    this::emit(subscriptionEventTypes.notification, subscriptionEvents[event], message);\n  });\n}\nfunction init() {\n  const platform = this[symbols.platform];\n  this[symbols.subscription] = this[symbols.sdk].createSubscription();\n  const ownerId = platform.auth().data().owner_id;\n  let cacheKey = null;\n  if (typeof localStorage !== 'undefined') {\n    cacheKey = `${this.prefix}-sub-${ownerId}`;\n    const cachedSubscription = localStorage.getItem(cacheKey);\n    if (cachedSubscription) {\n      try {\n        this.base.setSubscription(JSON.parse(cachedSubscription));\n      } catch (e) {\n        /* do nothing */\n      }\n    }\n  }\n\n\n  this.base.setEventFilters(this.filters);\n\n  this.base.on(this.base.events.notification, message => {\n    this::messageHandler(message);\n  });\n  this.base.on(this.base.events.removeSuccess, () => {\n    this.store.dispatch({\n      type: this.actions.updateStatus,\n      status: subscriptionStatus.notSubscribed,\n      subscription: null,\n    });\n    this::emit(subscriptionEventTypes.statusChanged, this.status);\n  });\n  this.base.on(this.base.events.removeError, () => {\n    // TODO\n  });\n  this.base.on(this.base.events.renewSuccess, () => {\n    if (cacheKey) {\n      localStorage.setItem(cacheKey, JSON.stringify(this.base.subscription()));\n    }\n    const oldStatus = this.status;\n    this.store.dispatch({\n      type: this.actions.updateStatus,\n      status: subscriptionStatus.subscribed,\n      subscription: this.base.subscription(),\n    });\n    if (oldStatus !== this.status) {\n      this::emit(subscriptionEventTypes.statusChanged, this.status);\n    }\n  });\n  this.base.on(this.base.events.renewError, error => {\n    // TODO handle 429\n    this.store.dispatch({\n      type: this.actions.updateStatus,\n      status: subscriptionStatus.notSubscribed,\n      subscription: null,\n    });\n    this::emit(subscriptionEventTypes.statusChanged, this.status);\n    this.base.reset().setEventFilters(this.filters).register().catch(e => { });\n  });\n  this.base.on(this.base.events.subscribeSuccess, () => {\n    if (cacheKey) {\n      localStorage.setItem(cacheKey, JSON.stringify(this.base.subscription()));\n    }\n    this.store.dispatch({\n      type: this.actions.updateStatus,\n      status: subscriptionStatus.subscribed,\n      subscription: this.base.subscription(),\n    });\n    this::emit(subscriptionEventTypes.statusChanged, this.status);\n  });\n  this.base.on(this.base.events.subscribeError, error => {\n    // TODO\n    // handle 429\n    // handle subscription limit\n  });\n\n  if (this.filters.length) {\n    this.base.register().catch(() => { /* do nothing */ });\n  }\n}\n\nexport default class Subscription extends RcModule {\n  constructor(options) {\n    super({\n      ...options,\n      actions: subscriptionActions,\n    });\n\n    const {\n      auth,\n      platform,\n      sdk,\n      promiseForStore,\n    } = options;\n    this[symbols.auth] = auth;\n    this[symbols.platform] = platform;\n    this[symbols.sdk] = sdk;\n    this[symbols.subscription] = null;\n\n    // caches filters before redux store is created\n    this[symbols.filterCache] = [];\n\n    promiseForStore.then(() => {\n      // update store with cachedFitlers\n      this.store.dispatch({\n        type: this.actions.updateFilters,\n        filters: this.filters,\n      });\n      this[symbols.filterCache] = null;\n    });\n\n    auth.on(auth.events.loggedIn, () => {\n      this::init();\n    });\n\n    auth.on(auth.events.loggedOut, () => {\n      if (this.base) {\n        this.reset();\n      }\n    });\n\n    auth.addBeforeLogoutHandler(async () => {\n      await this.reset();\n    });\n  }\n\n  get reducer() {\n    return getSubscriptionReducer(this.prefix);\n  }\n\n  get status() {\n    return this.state.status;\n  }\n\n  get filters() {\n    return this[symbols.filterCache] || this.state.filters;\n  }\n\n  get base() {\n    return this[symbols.subscription];\n  }\n\n  get events() {\n    return subscriptionEvents;\n  }\n\n  get eventTypes() {\n    return subscriptionEventTypes;\n  }\n\n  subscribe(event) {\n    // TODO normalized error\n    if (!subscriptionEvents::Enum.hasValue(event)) {\n      throw new Error('event is not recognized');\n    }\n\n    if (this.filters.indexOf(event) === -1) {\n      const newFilters = this.filters.slice();\n      newFilters.push(event);\n      if (this.base) {\n        this.base.setEventFilters(newFilters);\n        this.store.dispatch({\n          type: this.actions.updateFilters,\n          filters: newFilters,\n        });\n        this.base.register().catch(() => { /* do nothing */ });\n      } else {\n        this[symbols.filterCache] = newFilters;\n      }\n    }\n  }\n\n  unsubscribe(event) {\n    // TODO normalized error\n    if (!subscriptionEvents::Enum.hasValue(event)) {\n      throw new Error('event is not recognized');\n    }\n    const idx = this.filters.indexOf(event);\n    if (this.filters.indexOf(event) > -1) {\n      const newFilters = this.filters.slice();\n      newFilters.splice(idx, 1);\n      if (this.base) {\n        this.base.setEventFilters(newFilters);\n        this.store.dispatch({\n          type: this.actions.updateFilters,\n          filters: newFilters,\n        });\n        if (newFilters.length) {\n          this.base.register().catch(() => { /* do nothing */ });\n        } else {\n          this.base.remove();\n        }\n      } else {\n        this[symbols.filterCache] = newFilters;\n      }\n    }\n  }\n\n  async reset() {\n    try {\n      if (this.base) {\n        if (this.status === subscriptionStatus.subscribed) {\n          await this.base.remove();\n        } else {\n          await this.base.reset();\n        }\n      }\n    } catch (e) {\n      // TODO\n    }\n    this[symbols.subscription] = null;\n    const oldStatus = this.status;\n    this.store.dispatch({\n      type: this.actions.updateStatus,\n      status: subscriptionStatus.notSubscribed,\n      subscription: null,\n    });\n    if (oldStatus !== this.status) {\n      this::emit(subscriptionEventTypes.statusChanged, this.status);\n    }\n  }\n\n\n}\n"]}