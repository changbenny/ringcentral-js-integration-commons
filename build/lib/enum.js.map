{"version":3,"sources":["lib/enum.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAM,iBAAiB,GAAG,cAA1B;AACA,IAAM,aAAa,uBAAnB;AACA,IAAM,SAAS,uBAAf;;IAEqB,I;AACnB,gBAAY,UAAZ,EAAwB;AAAA;;AAAA;;AACtB,SAAK,UAAL,IAAmB,sBAAc,EAAd,EAAkB,UAAlB,CAAnB;AACA,SAAK,MAAL,IAAe,mBAAf;;AAFsB,+BAIX,GAJW;AAKpB,UAAI,eAAe,IAAf,CAAoB,UAApB,EAAgC,GAAhC,CAAJ,EAA0C;AACxC,6CAA4B,GAA5B,EAAiC;AAC/B,aAD+B,iBACzB;AACJ,mBAAO,KAAK,UAAL,EAAiB,GAAjB,CAAP;AACD,WAH8B;;AAI/B,sBAAY;AAJmB,SAAjC;AAMA,cAAK,MAAL,EAAa,GAAb,CAAiB,MAAK,UAAL,EAAiB,GAAjB,CAAjB;AACD;AAbmB;;AAItB,SAAK,IAAM,GAAX,IAAkB,UAAlB,EAA8B;AAAA,YAAnB,GAAmB;AAU7B;AACF;;;;6BACe,K,EAAO;AACrB,aAAO,KAAK,MAAL,EAAa,GAAb,CAAiB,KAAjB,CAAP;AACD;;;;;;;;;;;;;;;;;;;;;;;kBAnBkB,I","file":"enum.js","sourcesContent":["const hasOwnProperty = {}.hasOwnProperty;\nconst DEFINITION = Symbol();\nconst VALUES = Symbol();\n\nexport default class Enum {\n  constructor(definition) {\n    this[DEFINITION] = Object.assign({}, definition);\n    this[VALUES] = new Set();\n\n    for (const key in definition) {\n      if (hasOwnProperty.call(definition, key)) {\n        Object.defineProperty(this, key, {\n          get() {\n            return this[DEFINITION][key];\n          },\n          enumerable: true,\n        });\n        this[VALUES].add(this[DEFINITION][key]);\n      }\n    }\n  }\n  static hasValue(value) {\n    return this[VALUES].has(value);\n  }\n}\n\n/*\n * //with Proxy support\n *const enumHandler = {\n *  get(target, key) {\n *    return target[key];\n *  },\n *  set() {\n *    return;\n *  }\n *};\n *Enum = class Enum extends Proxy {\n *  constructor(definition) {\n *    super(Object.assign({}, definition), enumHandler);\n *  }\n *}\n */\n\n"]}